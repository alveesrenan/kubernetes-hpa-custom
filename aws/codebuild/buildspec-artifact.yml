version: 0.2

env:
  variables:
    SETTINGS_PATH: settings.xml
    SONARQUBE_URL: https://sonar-b2b.atech.com.br/sonarqube
    ARTIFACTORY_URL: https://artifactory-b2b.atech.com.br/artifactory
    CI_COMMIT_REF_NAME: master
  parameter-store:
    SSH_KEY: "prod-ssh-key"
    SSH_CONFIG: "prod-ssh-config"
    SONARQUBE_LOGIN: "prod-sonarqube-login"
    SONARQUBE_PASSWORD: "prod-sonarqube-password"
    RELEASE_SCM_USER: "prod-release-scm-user"
    RELEASE_SCM_TOKEN: "prod-release-scm-token"

phases:

  install:
    commands:
      - echo Entered the install phase and compile dependencies from project on `date`...
      - mvn -B compile -s ${SETTINGS_PATH}

  pre_build:
    commands:
      - echo Pre-build started and running tests from project on `date`...
      - mvn -B verify -s ${SETTINGS_PATH} -DskipTests

  build:
    commands:
      - echo Build started and generating fat-jar from project on `date`...
      - mvn clean package -B -s ${SETTINGS_PATH} -DskipTests
    finally:
      - echo Generating quality code on sonarqube...
      - mvn sonar:sonar -Dsonar.url=${SONARQUBE_URL} -Dsonar.login=${SONARQUBE_LOGIN} -Dsonar.password=${SONARQUBE_PASSWORD} -B -s ${SETTINGS_PATH}

  post_build:
    commands:
      - echo Entered the Post-Build phase and generating release artifact to jFrog on `date`...
      - echo ${SSH_KEY} > id_rsa && chown 600 id_rsa
      - echo ${SSH_CONFIG} > config && chmod 600 config
      - mkdir -p ~/.ssh
      - touch ~/.ssh/known_hosts
      - mv id_rsa ~/.ssh/ && mv config ~/.ssh/
      - eval $(ssh-agent -s)
      - ssh-add id_rsa
      - ssh-keyscan -t rsa git-codecommit.us-east-1.amazonaws.com >> ~/.ssh/known_hosts
      - git config --global user.email "alveeesrenan-cicd@alveesrenan-dev.com.br"
      - git config --global user.name "CI Boot Release"
      - git checkout ${CI_COMMIT_REF_NAME}
      - git reset --hard origin/${CI_COMMIT_REF_NAME}
    finally:
      - mvn release:clean release:prepare release:perform -B -DscmCommentPrefix="[maven-release] [skip ci] " -Darguments="-DskipTests -Dartifactory.url=${ARTIFACTORY_URL}" -Drelease.scm.user=${RELEASE_SCM_USER} -Drelease.scm.token=${RELEASE_SCM_TOKEN} -s ${SETTINGS_PATH}

artifacts:
  files:
    - target/kubernetes-hpa-custom.jar
  discard-paths: yes

cache:
  paths:
    - './.m2'